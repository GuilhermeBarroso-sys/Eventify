version: "3.2"
services:

  mysql:
    image: mysql:latest
    container_name: 'app-mysql'
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
    env_file:
      - .env
    volumes:
      - mysql:/var/lib/mysql
  rabbitmq:
    build:
      context: .
      dockerfile: ./src/docker/rabbitmq/Dockerfile
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    command: ["bash", "-c", "chmod 400 /var/lib/rabbitmq/.erlang.cookie; rabbitmq-server"]
    environment:
      RABBITMQ_DELAYED_MESSAGE_EXCHANGE: "true"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 5s
      timeout: 10s
      retries: 5
  app:
    build:
      context: .
      dockerfile: ./src/docker/app/Dockerfile.prod
    depends_on:
      rabbitmq:
        condition: service_healthy
      mysql:
        condition: service_started
    ports:
      - 3000:3000
    container_name: 'app'
    volumes:
      - .:/usr/dev
  nginx:
      image: nginx:latest
      container_name: 'nginx'
      ports:
        - "80:80"
        - "443:443"
      restart: always
      volumes:
        - ./infra/nginx/prod/nginx.conf:/etc/nginx/nginx.conf:ro
        - ./data/certbot/conf:/etc/letsencrypt
        - ./data/certbot/www:/var/www/certbot
      depends_on:
        - app
  certbot:
    image: certbot/certbot:latest
    container_name: 'certbot'
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot


volumes:
  mysql:
    driver: local